<!--
   project: demo-dep
      illustrate from some fake projects how dependencies are satisfied using ivy -->
<project name="all" default="publish-all" 
         xmlns:ivy="antlib:org.apache.ivy.ant">

	<property file="${basedir}/build.properties"/>
    
  <!--sei nicht aufgeregt  das ist nur ein kleines Speil -->  
	<!-- ================================= 
          target: load-ivy         
            this target is not necessary if you put ivy.jar in your ant lib directory
            if you already have ivy 1.4 in your ant lib, you can simply remove this
            target
         ================================= -->
    <target name="load-ivy">
    	<!-- try to load ivy here from home ivy dir, in case the user has not already dropped
    	      it into ant's lib dir (note that the latter copy will always take precedence).
    	      We will not fail as long as ivy home lib dir exists (it may be empty) and
    	      ivy is in at least one of ant's lib dir or the ivy home lib dir. -->
    	<path id="ivy.lib.path">
    	    <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
    	</path>
    	<taskdef resource="org/apache/ivy/ant/antlib.xml"
    	          uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>    
         
  <target name="buildlist" depends="load-ivy"> 
    <ivy:buildlist reference="build-path">
      <fileset dir="projects" includes="**/build.xml"/>
    </ivy:buildlist>
  </target>
  
  <target name="publish-all" depends="buildlist" 
  			description="compile, jar and publish all projects in the right order">
    <subant target="publish" buildpathref="build-path" />
  </target>

  <target name="clean-all" depends="buildlist" description="clean all projects">
    <subant target="clean" buildpathref="build-path" />
  </target>
  
  <target name="clean-total" depends="clean-all, load-ivy" 
  			description="clean demo: delete repository, ivy cache, and all projects">
    <delete dir="dropzone-repository"/>
  	<ivy:cleancache />
  </target>
  
  
</project>
